Object Oriented Programming System(OOP'S)

Methods : Inheritance,Polymorphism,Encapsulation,Abstraction 
Entity: Anything which has the existence or anything which exists
Object/Instance: It is a Real world physical Entity.
Class: A Logical Entity or Blueprint or Plan to create Multiple Objects
       Multiple Objects created using same class is known as Identical Objects or Similar Objects.

ClassName Rules:
1)The Class name can be any valid Identifier
2)It can't be a Python Reserved word 
3)A Valid class keyword starts with a letter,followed by any number of letter,numbers or underscores.
4)A class name generally starts with Capital Letter.

How to Create a class:
syntax--> class ClassName:
class Mobile:
object_name = class_name()
object_name = class_name(arg)

.pyc = c --> class

Types of Constructors : Parameterized,Non-Parameterized
->Python supports special Type of Method called Constructor for initialising the Instance variable of a class
->A Constructor is only called once at the time of creating an Instance
->If two Instances are created for a class,the Constructor will be called once for each Instance.
->A class Constructor,if defined is called whenever a program creates an Object of that class.
1)Parameterized Constructor: These are ones which have parameters(other than self) defined in  the __init__ method's parameter list.
-->This type of Constructor can take arguments from the user.
2)Non-Parameterized Constructor:Also known as Default Constructor
-->The __init__ method includes a single parameter self
-->No other parameters are present in __init__'s parameter list
-->Consequently, this Constructor takes "no arguments" while creating a new object
-->Non-Parameterized Constructors assign Default values to the attributes of the class.

The __init__() Method:
This is a Magic Method(dunder method) which we can use to initialise variables for classes(objects).
Every class has __init__ and this is executed when we instantiate the class.
You can Also use this method to do anything you want to do when the object is being created.
We do not call this method explicitly.

self:
#self is a Default variable that contains the memory address of the current object.
#self is used to refer all the Instance variable and method
#when we create a object of a class, the object_name contains the memory location of the object
#This memory location is internally passed to self, as self holds the memory address of the object so we can access 
variable and method of the object
#self is the first argument to any object method because the first argument is always the object reference
This is Automatic, whether you call it self or not
we can use any other variable name instead of self variable.

                       ----> 1)State of an Object : Represents the properties or attributes of an Object
                               DataMembers
OBJECT : 2 Categories--
                       ----> 2)Behaviour of an Object : The Functionality or work done by the object
                               Functions/Methods
